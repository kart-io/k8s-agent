apiVersion: v1
kind: ConfigMap
metadata:
  name: orchestrator-config
  namespace: aetherius
data:
  config.yaml: |
    server:
      host: "0.0.0.0"
      port: 8081

    nats:
      url: "nats://aetherius-nats:4222"
      max_reconnects: 10

    database:
      host: "aetherius-postgres"
      port: 5432
      user: "aetherius"
      database: "aetherius_orchestrator"
      sslmode: "disable"

    redis:
      addr: "aetherius-redis:6379"
      db: 1

    agent_manager:
      url: "http://agent-manager:8080"

    ai:
      reasoning_service_url: "http://reasoning-service:8082"
      timeout: "30s"
      max_retries: 3

    log_level: "info"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator-service
  namespace: aetherius
  labels:
    app: orchestrator-service
    component: orchestration
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orchestrator-service
  template:
    metadata:
      labels:
        app: orchestrator-service
        component: orchestration
    spec:
      serviceAccountName: orchestrator-service
      containers:
      - name: orchestrator
        image: aetherius/orchestrator-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
          protocol: TCP
        env:
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: agent-manager-secrets
              key: database-password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: agent-manager-secrets
              key: redis-password
        volumeMounts:
        - name: config
          mountPath: /app/configs
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
          limits:
            cpu: 4000m
            memory: 8Gi
      volumes:
      - name: config
        configMap:
          name: orchestrator-config

---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator-service
  namespace: aetherius
  labels:
    app: orchestrator-service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8081
    targetPort: http
    protocol: TCP
  selector:
    app: orchestrator-service

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: orchestrator-service
  namespace: aetherius

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: orchestrator-service
  namespace: aetherius
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: orchestrator-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: orchestrator-service
  namespace: aetherius
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: orchestrator-service
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70