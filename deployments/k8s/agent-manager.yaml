apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-manager-config
  namespace: aetherius
data:
  config.yaml: |
    server:
      host: "0.0.0.0"
      port: 8080

    nats:
      url: "nats://aetherius-nats:4222"
      max_reconnects: 10
      reconnect_wait: 5s

    database:
      host: "aetherius-postgres"
      port: 5432
      user: "aetherius"
      database: "aetherius_agent_manager"
      sslmode: "disable"
      max_connections: 50

    redis:
      addr: "aetherius-redis:6379"
      db: 0
      max_retries: 3

    log_level: "info"

---
apiVersion: v1
kind: Secret
metadata:
  name: agent-manager-secrets
  namespace: aetherius
type: Opaque
stringData:
  database-password: "aetherius_pass"
  redis-password: "redis_pass"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-manager
  namespace: aetherius
  labels:
    app: agent-manager
    component: control-plane
spec:
  replicas: 3
  selector:
    matchLabels:
      app: agent-manager
  template:
    metadata:
      labels:
        app: agent-manager
        component: control-plane
    spec:
      serviceAccountName: agent-manager
      containers:
      - name: agent-manager
        image: aetherius/agent-manager:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: agent-manager-secrets
              key: database-password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: agent-manager-secrets
              key: redis-password
        volumeMounts:
        - name: config
          mountPath: /app/configs
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
      volumes:
      - name: config
        configMap:
          name: agent-manager-config

---
apiVersion: v1
kind: Service
metadata:
  name: agent-manager
  namespace: aetherius
  labels:
    app: agent-manager
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  selector:
    app: agent-manager

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-manager
  namespace: aetherius

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agent-manager
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "events", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agent-manager
subjects:
- kind: ServiceAccount
  name: agent-manager
  namespace: aetherius

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: agent-manager
  namespace: aetherius
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: agent-manager

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: agent-manager
  namespace: aetherius
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: agent-manager
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80