# Alertmanager 配置文件
# 告警路由和通知配置

global:
  resolve_timeout: 5m
  # SMTP 配置 (邮件通知)
  smtp_smarthost: 'smtp.example.com:587'
  smtp_from: 'aetherius-alerts@example.com'
  smtp_auth_username: 'alerts@example.com'
  smtp_auth_password: 'password'
  smtp_require_tls: true

# 告警模板
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# 路由配置
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h
  receiver: 'default'

  routes:
    # 严重告警 - 立即通知
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 5m

    # 高优先级告警
    - match:
        severity: high
      receiver: 'high-alerts'
      group_wait: 30s
      repeat_interval: 1h

    # 警告级别
    - match:
        severity: warning
      receiver: 'warning-alerts'
      repeat_interval: 3h

    # 信息级别
    - match:
        severity: info
      receiver: 'info-alerts'
      repeat_interval: 12h

    # Agent Manager 告警
    - match:
        service: agent-manager
      receiver: 'agent-manager-team'
      continue: true

    # Orchestrator Service 告警
    - match:
        service: orchestrator-service
      receiver: 'orchestrator-team'
      continue: true

    # Reasoning Service 告警
    - match:
        service: reasoning-service
      receiver: 'reasoning-team'
      continue: true

# 告警抑制规则
inhibit_rules:
  # 如果服务完全不可用,抑制该服务的其他告警
  - source_match:
      severity: 'critical'
      alertname: '.*Down'
    target_match:
      severity: 'warning'
    equal: ['service']

  # 如果节点不可达,抑制该节点上的 Pod 告警
  - source_match:
      alertname: 'NodeUnreachable'
    target_match_re:
      alertname: 'Pod.*'
    equal: ['node']

  # 如果数据库不可用,抑制数据库连接告警
  - source_match:
      alertname: 'PostgreSQLDown'
    target_match:
      alertname: 'PostgreSQLHighConnections'

# 接收器配置
receivers:
  # 默认接收器
  - name: 'default'
    webhook_configs:
      - url: 'http://localhost:9090/webhook'

  # 严重告警 - 多渠道通知
  - name: 'critical-alerts'
    email_configs:
      - to: 'oncall@example.com'
        headers:
          Subject: '[CRITICAL] Aetherius Alert: {{ .GroupLabels.alertname }}'
        html: '{{ template "email.html" . }}'
    webhook_configs:
      - url: 'http://webhook-service:8080/critical'
        send_resolved: true
    # Slack 通知
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#aetherius-critical'
        title: '[CRITICAL] {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        color: 'danger'
    # PagerDuty 通知
    pagerduty_configs:
      - service_key: 'YOUR_PAGERDUTY_SERVICE_KEY'
        description: '{{ .GroupLabels.alertname }}: {{ .GroupLabels.instance }}'

  # 高优先级告警
  - name: 'high-alerts'
    email_configs:
      - to: 'team@example.com'
        headers:
          Subject: '[HIGH] Aetherius Alert: {{ .GroupLabels.alertname }}'
        html: '{{ template "email.html" . }}'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#aetherius-alerts'
        title: '[HIGH] {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        color: 'warning'

  # 警告级别
  - name: 'warning-alerts'
    email_configs:
      - to: 'team@example.com'
        headers:
          Subject: '[WARNING] Aetherius: {{ .GroupLabels.alertname }}'
        html: '{{ template "email.html" . }}'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#aetherius-alerts'
        title: '[WARNING] {{ .GroupLabels.alertname }}'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'

  # 信息级别
  - name: 'info-alerts'
    webhook_configs:
      - url: 'http://webhook-service:8080/info'
        send_resolved: true

  # Agent Manager 团队
  - name: 'agent-manager-team'
    email_configs:
      - to: 'agent-team@example.com'
        headers:
          Subject: '[Agent Manager] {{ .GroupLabels.alertname }}'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#agent-manager'

  # Orchestrator 团队
  - name: 'orchestrator-team'
    email_configs:
      - to: 'orchestrator-team@example.com'
        headers:
          Subject: '[Orchestrator] {{ .GroupLabels.alertname }}'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#orchestrator'

  # Reasoning 团队
  - name: 'reasoning-team'
    email_configs:
      - to: 'reasoning-team@example.com'
        headers:
          Subject: '[Reasoning Service] {{ .GroupLabels.alertname }}'
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#reasoning-service'